<?xml version="1.0" encoding="UTF-8"?>
<!--
	Dit schema is gegenereerd door XML spy, en daarna handmatig bewerkt tbv.Kadaster Json schema generatie.
	
	Aanpassingen:
  - 20181117 (Eerste integratie in Imvertor)
	  - element <ep:id> toegevoegd, ep:ref zal nu verwijzen naar ep:id
	  - <ep:parameters> (in model) mag leeg zijn, en is nergens verplicht
	  - ep:pattern en ep:eq zijn niet mixed (mixed=false).
	  - global construct mag ook ep:seq bevatten. 
	    Dit om domeinen (=schemas) mogelijk te maken. 
	    (TODO naast ep:construct ook ep:schema gaan ondersteunen? - zie 20230424)
	    nb. enige verschil tussen global en local constructs is dat globals geen choice kennen.
	    (TODO verschil opheffen? - zie 20230424) 
	  - min-occurs en max-occurs zijn verplaatst naar een hogere plek. 
		Wat nu wordt uitgedrukt op construct is: hoe vaak mag deze construct voorkomen in de parent? 
	  - construct kan naast seq ook choice bevatten.
      - enkele ep-elementen worden niet door Kadaster gebruikt: minvalue, maxvalue, example, etc. - dat zou dan aanpassing van het metamdoel betekenen.
      - ep:formal-pattern toegevoegd naast ep:pattern.
      - ep:min-length naast ep:max-length opgenomen
      - ep:alias is niet verplicht op een enum.
      
   - 20211220
      - vervang waarde van note fields door ##any
   
   - 20230507
   	 zie aanpassingen zoals beschreven in https://github.com/Imvertor/Imvertor-Maven/issues/343
   	 
     - (1) ep:documentation krijgt /@name vorm; introduceer ep:text en ep:parameters in ep:documentation elementen 
     - (2) onderscheid localconstruct en globalconstruct opgeheven.
     - (3) introductie van groups(s) naast message-set(s)
     - (4) alias overal verwijderen, wordt parameter.
     - (5) Tech-name wordt niet meer doorgegeven, zelf bepalen op basis van naam
     - (6) Supertypen kunnen worden opgegeven, in dat geval is "content" (een ep:seq of ep:choice) element niet meer nodig.
     - (7) ep:parameter krijgt /@name vorm
     - (8) ep:example vervalt
     - (9) ep:enum wordt string
     - (10) ep:parameters vervalt in ep:seq en ep:choice
     - (11) element ep:id verwijderd, ep:ref zal nu verwijzen naar @id (exact match)
     
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns="http://www.imvertor.org/schema/endproduct"
	xmlns:ep="http://www.imvertor.org/schema/endproduct"
	targetNamespace="http://www.imvertor.org/schema/endproduct" elementFormDefault="qualified">

	<xs:element name="choice">
		<xs:complexType>
			<xs:choice minOccurs="1" maxOccurs="unbounded">
				<xs:element ref="seq"/>
				<xs:element ref="choice"/>
				<xs:element ref="construct"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="construct" type="ep:construct"/>
	<xs:complexType name="construct">
		<xs:sequence>
			<xs:element ref="parameters" minOccurs="0"/>
			<xs:element ref="name"/>
			<xs:element ref="documentation" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="min-occurs" minOccurs="0"/>
			<xs:element ref="max-occurs" minOccurs="0"/>
			<xs:element ref="external" minOccurs="0"/>
			<xs:element ref="super" minOccurs="0"/>
			<xs:choice minOccurs="0">
				<!-- 0 is toegestaan als er supertypen zijn -->
				<xs:choice>
					<xs:sequence>
						<xs:element ref="data-type"/>
						<xs:element ref="min-value" minOccurs="0"/>
						<xs:element ref="max-value" minOccurs="0"/>
						<xs:element ref="min-length" minOccurs="0"/>
						<xs:element ref="max-length" minOccurs="0"/>
						<xs:element ref="formal-pattern" minOccurs="0"/>
						<xs:element ref="enum" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:sequence>
						<xs:element ref="type-name"/>
					</xs:sequence>
				</xs:choice>
				<xs:element ref="seq"/>
				<xs:element ref="choice"/>
				<xs:element ref="ref"/>
			</xs:choice>
		</xs:sequence>
		<xs:attribute name="id" type="xs:ID" use="optional"/>
	</xs:complexType>
	<xs:element name="data-type" type="xs:string"/>
	<xs:element name="date" type="xs:date"/>
	<xs:element name="documentation">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="parameters" minOccurs="0"/>
				<xs:element ref="text"/>
			</xs:sequence>
			<xs:attribute name="type" type="xs:string"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="text">
		<xs:complexType>
			<xs:sequence>
				<xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" namespace="##any"
				/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="enum" type="xs:string"/>
	
	<xs:element name="group">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="parameters" minOccurs="0"/>
				<xs:element ref="name"/>
				<xs:element ref="release" minOccurs="0"/>
				<xs:element ref="documentation" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="seq" minOccurs="0">
					<!-- 0 is toegestaan als het een leeg of extern package betreft -->
					<xs:complexType>
						<xs:choice minOccurs="0" maxOccurs="unbounded">
							<xs:element ref="construct"/>
							<xs:element ref="group"/>
						</xs:choice>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="min-length" type="xs:short"/>
	<xs:element name="max-length" type="xs:short"/>
	<xs:element name="max-occurs" type="xs:string"/>
	<xs:element name="min-occurs" type="xs:int"/>
	<xs:element name="name" type="xs:string"/>
	<xs:element name="id" type="xs:string"/>
	<xs:element name="p">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="subpath">
						<xs:simpleType>
							<xs:restriction base="xs:string"/>
						</xs:simpleType>
					</xs:attribute>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="parameter">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="name" type="xs:string"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="parameters">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="parameter" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="patch-number" type="xs:string"/>
	<xs:element name="formal-pattern" type="xs:string"/>
	<xs:element name="ref" type="xs:string"/>
	<xs:element name="release" type="xs:int"/>
	<xs:element name="seq">
		<xs:complexType>
			<xs:choice minOccurs="1" maxOccurs="unbounded">
				<xs:element ref="seq"/>
				<xs:element ref="choice"/>
				<xs:element ref="construct"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="type-name" type="xs:string"/>
	<xs:element name="value" type="xs:string"/>
	<xs:element name="min-value" type="xs:int"/>
	<xs:element name="max-value" type="xs:int"/>
	<xs:element name="external" type="xs:boolean"/>
	<xs:element name="super">
		<xs:complexType>
			<xs:choice>
				<xs:element ref="ref" maxOccurs="unbounded"/>
				<xs:element ref="data-type"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
</xs:schema>
