<?xml version="1.0" encoding="UTF-8"?>
<!-- 
 * Copyright (C) 2016 Dienst voor het kadaster en de openbare registers
 * 
 * This file is part of Imvertor.
 *
 * Imvertor is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Imvertor is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Imvertor.  If not, see <http://www.gnu.org/licenses/>.
-->
<metamodel type="config" xmlns:xi="http://www.w3.org/2001/XInclude">
  
    <name>BP</name>

    <desc lang="en">Metamodel for Dutch Best Practices based registrations</desc>
    
    <features>
        <feature name="role-based">false</feature>
        <feature name="allow-multiple-supertypes">false</feature>
        <feature name="allow-scalar-in-union">true</feature>
        <feature name="unique-normalized-class-names">model</feature>
    </features>
    
    <stereotypes xml:id="stereotypes">

        <!-- 
            For each stereotype, define a formal name, the name(s) in UML, description, the construct(s) to which the stereotype applies, and possible rules.
        -->
       
        <stereo id="stereotype-name-relatieklasse" primary="yes">
            <name lang="nl">Relatieklasse</name>
            <name lang="en">Relation class</name>
            <desc lang="nl">	
                Een relatiesoort waarover gegevens over de relatie tussen twee soorten objecten (in de 	vorm van een derde soort object) worden vastgelegd.
                Voorbeeld: relatieklasse OUDER-KIND RELATIE, relatieklasse FUNCTIONARIS
            </desc>
            <construct>class</construct>
        </stereo>
       
        <stereo id="stereotype-name-composite" primary="yes">
            <name lang="en">GroupType</name>
            <name lang="nl">Gegevensgroeptype</name>
            <desc lang="nl">
                De verzameling van gegevens van een object van een type die gelijktijdig muteren en onderhouden worden.
                Voorbeeld: gegevensgroeptype Geboorte bij INGESCHREVEN NATUURLIJK PERSOON, 	gegevensgroeptype Koopsom bij KADASTRALE ONROERENDE ZAAK
            </desc>
            <construct>class</construct>
        </stereo>
        <stereo id="stereotype-name-attribute" primary="yes">
            <name lang="en">AttributeType</name>
            <name lang="nl">Attribuutsoort</name>
            <desc lang="nl">De soort waartoe een attribuut kan behoren.</desc>
            <construct>attribute</construct>
        </stereo>
        <stereo id="stereotype-name-relatiesoort" primary="yes">
            <name lang="en">AssociationType</name>
            <name lang="nl">Relatiesoort</name>
            <desc lang="nl">De soort waartoe een relatie kan behoren.</desc>
            <construct>association</construct>
        </stereo>
        <stereo id="stereotype-name-externekoppeling" primary="yes">
            <name lang="nl">Externe koppeling</name>
            <name lang="en">External link</name>
            <desc lang="nl">Een associatie waarmee vanuit het perspectief van het eigen informatiemodel een objecttype van een extern informatiemodel 
                gekoppeld wordt aan een objecttype uit het ‘eigen’ informatiemodel. </desc>
            <construct>association</construct>
        </stereo>
        <!-- IM-215 -->
        <stereo id="stereotype-name-data-element" primary="yes">
            <name lang="nl">Data element</name>
            <name lang="en">Data element</name>
            <desc lang="nl">Een onderdeel van een Complex datatype uitgedrukt in een eigenschap van een class (attribute).</desc>
            <construct>attribute</construct>
        </stereo>

        <stereo id="stereotype-name-association-to-composite" primary="yes">
            <name lang="nl">Gegevensgroep compositie</name>
            <name lang="en">Datagroup compositon</name>
            <desc lang="nl">
                Een verbijzondering van een relatiesoort waarbij een object van het objecttype of een 
                gegevensgroep van een gegevensgroeptype of een asscociationclass van een relatieklasse 	samengesteld is uit gegevensgroepen 
                van een gegevensgroeptype en deze 	gegevensgroepen  maken altijd deel uit van één compositie.
           </desc>
            <construct>association</construct>
        </stereo>

        <stereo id="stereotype-name-union" primary="yes">
            <name lang="nl">Union</name>
            <name lang="en">Union</name>
            <desc lang="nl">
                Gestructureerd datatype zonder identiteit waarvan precies één van de
                (ten minste twee) onderdelen (attributes) aanwezig is in elke instantie. 
                Voorbeeld: Union LineOrPolygon. Union element Line of union element Polygon is van toepassing bij een instantie.
            </desc>
            <construct>datatype</construct>
        </stereo>
        <stereo id="stereotype-name-union-element" primary="yes">
            <name lang="en">Union element</name>
            <name lang="nl">Union element</name>
            <desc lang="nl">
                Een onderdeel van een Union uitgedrukt in een eigenschap van een class (attribute) die als keuze binnen de Union is gerepresenteerd.
                Voorbeeld: union element Line, union element Polygon beiden onderdeel uitmakend van Union LineOrPolygon
            </desc>
            <construct>attribute</construct>
        </stereo>

        <stereo id="stereotype-name-enumeration" primary="yes">
            <name lang="en">Enumeration</name>
            <name lang="nl">Enumeration</name>
            <desc lang="nl">
                Een lijst met een opsomming van de mogelijke domeinwaarden oftewel constanten van een Docent789
                attribuutsoort die onveranderlijk is.
            </desc>
            <construct>class</construct>
            <construct>datatype</construct>
            <construct>enumeration</construct>
        </stereo>
        <stereo id="stereotype-name-enum" primary="yes">
            <name lang="en">Enum</name>
            <name lang="nl">Enum</name>
            <desc lang="nl">Één element in een enumeratie.</desc>
            <construct>attribute</construct>
        </stereo>
        <stereo id="stereotype-name-simpletype" primary="yes">
            <name lang="en">Datatype</name>
            <name lang="nl">Datatype</name>
            <desc lang="nl"></desc>
            <construct>datatype</construct>
        </stereo>
        <stereo id="stereotype-name-complextype" primary="yes">
            <name lang="en">Complex datatype</name>
            <name lang="nl">Complex datatype</name>
            <desc lang="nl">
                Gestructureerd datatype zonder identiteit samengesteld uit minimaal twee onderdelen.
                Voorbeeld: Complex datatype Bedrag bestaat uit de data elementen som en valuta.
                De eigenschappen tezamen vormen de identiteit (een complex datatype “identificeert zichzelf” zoals er maar één “4 liter” bestaat, 
                in tegenstelling tot een persoon met voornaam Arjan, want zo kunnen meerdere mensen heten, zonder dezelfde persoon te zijn)
            </desc>
            <construct>datatype</construct>
        </stereo>
        <!-- a imvert:stereotype value -->
        <stereo id="stereotype-name-objecttype" primary="yes">
            <name lang="en">Objecttype</name>
            <name lang="nl">Objecttype</name>
            <desc lang="nl">
                De soort waartoe een object kan behoren.
                Toelichting:
                Een soort is ondubbelzinnig gedefinieerd als met behulp van de definitie van elk 	aangeboden object ondubbelzinnigheid bepaald 
                kan worden of het wel of niet tot de 	betreffende soort behoort.
                Objecten zijn dingen waarvan de eigenschappen in de vorm van gegevens worden 	vastgelegd. 
                Toelichting:
                Objecten zijn vaak:
                -	Fysiek van aard, zoals natuurlijke personen, panden e.d.
                -	Abstract van aard zoals kadastraal percelen, maatschappelijke activiteiten
            </desc>
            <construct>class</construct>
        </stereo>
        
        <stereo id="stereotype-name-referentielijst" primary="yes">
            <name lang="nl">Referentielijst</name>
            <name lang="en">Reference list</name>
            <desc lang="nl">
                Een lijst met een opsomming van de mogelijke domeinwaarden van een attribuutsoort die in de loop van de tijd kan veranderen.
                Voorbeeld: referentielijst LAND, referentielijst NATIONALITEIT
               (Een "rij" in de "tabel".)
            </desc>
            <construct>class</construct>
            <construct>datatype</construct>
        </stereo>
        <stereo id="stereotype-name-referentie-element" primary="yes">
            <name lang="nl">Referentie element</name>
            <name lang="en">Reference element</name>
            <desc lang="nl">
                Een eigenschap van een referentielijst in de vorm van een gegeven.
                Voorbeeld: referentie element Landcode ISO bij referentielijst LAND, referentie element 	
                Nationaliteitcode bij referentielijst NATIONALITEIT
                (Een "cel" in de "rij" van een tabel.)
            </desc>
            <construct>attribute</construct>
        </stereo>

        <stereo id="stereotype-name-system-reference-package" primary="yes">
            <name lang="en">System-reference-package</name>
            <name lang="nl">System-reference-package</name>
            <desc lang="nl">Een package dat door het systeem is aangemaakt om referentie-elementen te bevatten.</desc>
            <construct>package</construct>
        </stereo>
        <stereo id="stereotype-name-system-reference-class" primary="yes">
            <name lang="en">System-reference-class</name>
            <name lang="nl">System-reference-class</name>
            <desc lang="nl">Een class welke door het systeem is aangemaakt als referentie-element.</desc>
            <construct>class</construct>
        </stereo>
        <stereo id="stereotype-name-reference" primary="yes">
            <name lang="en">Reference</name>
            <name lang="nl">Referentie</name>
            <desc lang="nl">Een complex datatype met de naam *AltRef die door de gebruiker is geïntroduceerd als referentie klasse. Zie IM-137. 
                Het betreft een referentie naar een objecttype uit een ander informatiemodel. 
                De referentie naar dit object zit in scope van het eigen model, maar het gerefereerde object niet. 
                Voorbeeld: de referentie naar een Persoon uit de BRP, in de vorm van alleen de identificatie die de BRP aan dit objecttype heeft toegekend. 
                Expliciet dus niet de BRP-Persoon zelf, noch een representatie hiervan in het eigen model.
                Toelichting: dit stereotype is analoog aan het stereotype «Externe koppeling» met het verschil dat bij deze laatste het gerefereerde object met 
                attributen is overgenomen naar het eigen model (in een package met stereotype «view»). Bij het stereotype «Referentie» wordt overname niet 
                nodig geacht, omdat alleen de relatie naar het object voldoende is (aanvullend op de identificatie van het object geen verdere attributen). 
            </desc>
            <construct>class</construct>
        </stereo>
        <stereo id="stereotype-name-codelist" primary="yes">
            <name lang="en">Codelist</name>
            <name lang="nl">Codelist</name>
            <construct>class</construct>
            <construct>datatype</construct>
        </stereo>
        
        <stereo id="stereotype-name-composite-id">
            <name lang="en">Isid</name>
            <name lang="nl">Isid</name>
            <desc lang="nl">Aanduiding dat een relatiesoort onderdeel uitmaakt van de unieke aanduiding van een object.</desc>
            <construct>association</construct>
        </stereo>
      
    </stereotypes>
    
    <!-- this is a set of stereotypes that is essential for constraint processing -->

    <stereotypes>
        <stereo id="stereotype-name-constraint-invariant">
            <name lang="en">invariant</name>
            <name lang="nl">invariant</name>
            <desc lang="en">An invariant is something that must always be true throughout the use case. e.g. The user's ID matches an ID from the Users table in the database</desc>
            <construct>constraint</construct>
        </stereo>
        <stereo id="stereotype-name-constraint-precondition">
            <name lang="en">pre-condition</name>
            <name lang="nl">pre-condition</name>
            <desc lang="en">A pre condition is something that must be true before the use case is invoked. e.g. a precondition for a use case "Buy Book on WebSite" might be "The user has accessed the website and wants to buy a book".</desc>
            <construct>constraint</construct>
        </stereo>
        <stereo id="stereotype-name-constraint-postcondition">
            <name lang="en">post-condition</name>
            <name lang="nl">post-condition</name>
            <desc lang="en">A post condition is something that must be true after the use case is finished. e.g. The user has successfully purchased a book.</desc>
            <construct>constraint</construct>
        </stereo>
        <stereo id="stereotype-name-constraint-process">
            <name lang="en">process</name>
            <name lang="nl">process</name>
            <desc lang="en">TODO</desc>
            <construct>constraint</construct>
        </stereo>
    </stereotypes>
</metamodel>
