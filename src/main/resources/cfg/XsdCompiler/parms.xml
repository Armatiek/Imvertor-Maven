<?xml version="1.0" encoding="UTF-8"?>
<!-- 
 * Copyright (C) 2016 Dienst voor het kadaster en de openbare registers
 * 
 * This file is part of Imvertor.
 *
 * Imvertor is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Imvertor is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Imvertor.  If not, see <http://www.gnu.org/licenses/>.
-->
<config>
   <id>
      <name>XML schema compiler</name>
      <version-control>$Id: parms.xml 7509 2016-04-25 13:30:29Z arjan $</version-control>
   </id>
   <cli-parms>
      <cli-parm>
         <name>createxmlschema</name>
         <arg>yes|no</arg>
         <tip>Yes if XML schemas must be generated</tip>
         <required>false</required>
      </cli-parm> 
      <cli-parm>
         <name>createcvafile</name>
         <arg>yes|no</arg>
         <tip>Yes if CVA files must be generated</tip>
         <required>false</required>
      </cli-parm> 
      <cli-parm>
         <name>externalurl</name>
         <arg>yes|no</arg>
         <tip>Yes if external schemas must be referened by URL</tip>
         <required>false</required>
      </cli-parm> 
      <cli-parm>
         <name>shortprefix</name>
         <arg>yes|no</arg>
         <tip>Yes if namespace prefixes for XSDs should be shortened</tip>
         <required>false</required>
      </cli-parm> 
      <cli-parm>
         <name>substitutions</name>
         <arg>yes|no</arg>
         <tip>Yes if substitutions should be generated, in stead of choice groups</tip>
         <required>false</required>
      </cli-parm> 
      <cli-parm>
         <name>buildcollection</name>
         <arg>yes|no</arg>
         <tip>Yes if collections (and referencing) are used, no if referencing is not used</tip>
         <required>false</required>
      </cli-parm> 
      <cli-parm>
         <name>collectionwrappers</name>
         <arg>yes|no</arg>
         <tip>Yes if components within collection must be wrapped in xsd</tip>
         <required>false</required>
      </cli-parm> 
      <cli-parm>
         <name>flattenschemas</name>
         <arg>yes|no</arg>
         <tip>Yes if schemas should also be flattened</tip>
         <required>false</required>
      </cli-parm>
      <cli-parm>
         <name>nilapproach</name>
         <arg>choice|att</arg>
         <tip>Specify how nillable constructs must be represented: as choice, or as attribute</tip>
         <required>false</required>
      </cli-parm>
      <cli-parm>
         <!-- required by KING approach -->
         <name>endproductbaseconfig</name>
         <arg>File name</arg><!-- REDMINE #487934 PATH BECOMES FILE NAME -->
         <tip>Name of the Excel file holding the base product configuration (KING)</tip>
         <required>false</required>
      </cli-parm>
      <cli-parm>
         <!-- required by Kadaster approach -->
         <name>forcenillable</name>
         <arg>yes|no</arg>
         <tip>Force all properties in the resulting schema to be nillable.</tip>
         <required>false</required>
      </cli-parm>
      <cli-parm>
         <name>elementisqualified</name>
         <arg>yes|no</arg>
         <tip>The XML schema elements are qualified. Defaults to Yes.</tip>
         <required>false</required>
      </cli-parm>
      <cli-parm>
         <name>attributeisqualified</name>
         <arg>yes|no</arg>
         <tip>The XML schema attributes are qualified. Defaults to No.</tip>
         <required>false</required>
      </cli-parm>
      <cli-parm>
         <name>xsdsubpath</name>
         <arg>subpath</arg>
         <tip>A path within the result XSD folder to which the XSDs for the model provided are written.</tip>
         <required>true</required>
      </cli-parm>
      
   </cli-parms>
  
   <properties>
   
      <LOCALIZE_XSD_XSLPATH>localize-xsd.xsl</LOCALIZE_XSD_XSLPATH>
      <LOCAL_SCHEMA_MAPPING_FILE>${system/inp-folder-path}/xsd/local-schemas.xml</LOCAL_SCHEMA_MAPPING_FILE>
    
      <!-- intermediate locations -->
      
      <RESULT_XSD_PREFORM_XML_FILE_PATH>${system/work-imvert-folder-path}/imvertor.28.1.xsd-preformed.xml</RESULT_XSD_PREFORM_XML_FILE_PATH>   
      <RESULT_XSD_XML_FILE_PATH>${system/work-imvert-folder-path}/imvertor.28.2.xsd.xml</RESULT_XSD_XML_FILE_PATH>   
      <RESULT_XSD_POSTFORM_XML_FILE_PATH>${system/work-imvert-folder-path}/imvertor.29.xsd-reformed.xml</RESULT_XSD_POSTFORM_XML_FILE_PATH>   
      <RESULT_XSD_IMPORT_XML_FILE_PATH>${system/work-imvert-folder-path}/imvertor.30.xsd-imported.xml</RESULT_XSD_IMPORT_XML_FILE_PATH>   
      
      <!-- Kadaster : -->
     
      <IMVERTOR_METAMODEL_Kadaster_XSDSOURCE>system</IMVERTOR_METAMODEL_Kadaster_XSDSOURCE>
      <IMVERTOR_METAMODEL_Kadaster_XSD_PREFORM_XSLPATH>Imvert2XSD-Kadaster-preform.xsl</IMVERTOR_METAMODEL_Kadaster_XSD_PREFORM_XSLPATH>
      <IMVERTOR_METAMODEL_Kadaster_XSD_XSLPATH>Imvert2XSD-Kadaster.xsl</IMVERTOR_METAMODEL_Kadaster_XSD_XSLPATH>
      <IMVERTOR_METAMODEL_Kadaster_XSD_POSTFORM_XSLPATH>Imvert2XSD-Kadaster-postform.xsl</IMVERTOR_METAMODEL_Kadaster_XSD_POSTFORM_XSLPATH>
      <IMVERTOR_METAMODEL_Kadaster_XSD_IMPORT_XSLPATH>Imvert2XSD-Kadaster-imports.xsl</IMVERTOR_METAMODEL_Kadaster_XSD_IMPORT_XSLPATH>
      
      <!-- flattening -->
      <IMVERTOR_FLATTEN_XSLPATH>flatten-xsd.xsl</IMVERTOR_FLATTEN_XSLPATH>
      <WORK_FLATTEN_FILE>${system/work-imvert-folder-path}/imvertor.26.flatten.html</WORK_FLATTEN_FILE>
      <!-- copy schemas -->
      <EXTERNAL_XSD_FOLDER>${system/inp-folder-path}/xsd</EXTERNAL_XSD_FOLDER>
      
      <!-- 
         KING Koppelvlakken schema's (BSM)
      -->
      
      <IMVERTOR_METAMODEL_KINGBSM_XSDSOURCE>system</IMVERTOR_METAMODEL_KINGBSM_XSDSOURCE>
      
      <IMVERTOR_METAMODEL_KINGBSM_ENDPRODUCT_XML_XSLPATH alias="EPXML">Imvert2XSD-KING-endproduct-xml.xsl</IMVERTOR_METAMODEL_KINGBSM_ENDPRODUCT_XML_XSLPATH>
      <IMVERTOR_METAMODEL_KINGBSM_REPROCESS_ENDPRODUCT_XML_XSLPATH alias="EPORDER">Imvert2XSD-KING-reprocess-endproduct-xml.xsl</IMVERTOR_METAMODEL_KINGBSM_REPROCESS_ENDPRODUCT_XML_XSLPATH>
      <IMVERTOR_METAMODEL_KINGBSM_SORT_ENDPRODUCT_XML_XSLPATH alias="EPSORT">Imvert2XSD-KING-sortByNamespace-endproduct-xml.xsl</IMVERTOR_METAMODEL_KINGBSM_SORT_ENDPRODUCT_XML_XSLPATH>
      <IMVERTOR_METAMODEL_KINGBSM_ENDPRODUCT_XSD_XSLPATH alias="EPXSD">Imvert2XSD-KING-endproduct-xsd.xsl</IMVERTOR_METAMODEL_KINGBSM_ENDPRODUCT_XSD_XSLPATH>
      
      <!-- locatie van de stuf onderlaag -->
      <STUF_ONDERLAAG_0302>${system/inp-folder-path}/xsd/other/KING-UGM/onderlaag-0302</STUF_ONDERLAAG_0302>
      
      <!-- 
         UGM transformation to Basisentiteiten schema 
      --> 
      <IMVERTOR_METAMODEL_KINGUGM_XSD_XSLPATH>Imvert2XSD-KING-UGM-Basisentiteiten.xsl</IMVERTOR_METAMODEL_KINGUGM_XSD_XSLPATH>
      <RESULT_METAMODEL_KINGUGM_XSD_FILEPATH>${system/work-xsd-folder-path}/${appinfo/project-name}.xml</RESULT_METAMODEL_KINGUGM_XSD_FILEPATH>
      
      <!-- checksum info for simpletypes -->
      <IMVERTOR_BLACKBOARD_CHECKSUM_SIMPLETYPES_XSLPATH>Imvert2XSD-KING-compile-checksum.xsl</IMVERTOR_BLACKBOARD_CHECKSUM_SIMPLETYPES_XSLPATH>
      <IMVERTOR_BLACKBOARD_CHECKSUM_SIMPLETYPES_XMLPATH>${system/inp-folder-path}/cfg/schemarules/checksum-simpletypes.xml</IMVERTOR_BLACKBOARD_CHECKSUM_SIMPLETYPES_XMLPATH>
      <IMVERTOR_BLACKBOARD_CHECKSUM_SIMPLETYPES_XMLPATH_LOCAL>${system/work-etc-folder-path}/checksum-simpletypes.xml</IMVERTOR_BLACKBOARD_CHECKSUM_SIMPLETYPES_XMLPATH_LOCAL>
      
      <!-- workfolder for serialized excel -->
      <work-serialize-folder>${system/work-folder-path}/serializer/temp-folder</work-serialize-folder>
      <!-- workfolder for processing the  -->
      <RESULT_ENDPRODUCT_MSG_FILE_PATH>${system/work-imvert-folder-path}/imvertor.27.endproduct-msg.xml</RESULT_ENDPRODUCT_MSG_FILE_PATH>
      <RESULT_ENDPRODUCT_XML_FILE_PATH>${system/work-imvert-folder-path}/imvertor.28.endproduct-xml.xml</RESULT_ENDPRODUCT_XML_FILE_PATH>   
      <RESULT_REPROCESSED_ENDPRODUCT_XML_FILE_PATH>${system/work-imvert-folder-path}/imvertor.29.reprocessed-endproduct-xml.xml</RESULT_REPROCESSED_ENDPRODUCT_XML_FILE_PATH>
      <RESULT_SORTED_ENDPRODUCT_XML_FILE_PATH>${system/work-imvert-folder-path}/imvertor.30.sorted-endproduct-xml.xml</RESULT_SORTED_ENDPRODUCT_XML_FILE_PATH>
      <RESULT_ENDPRODUCT_XSD_FILE_PATH>${system/work-xsd-folder-path}/${appinfo/project-name}.xml</RESULT_ENDPRODUCT_XSD_FILE_PATH>
      
      <!-- BRO : -->
      
      <IMVERTOR_METAMODEL_KKG_XSD_PREFORM_XSLPATH>Imvert2XSD-ISO1936-preform.xsl</IMVERTOR_METAMODEL_KKG_XSD_PREFORM_XSLPATH>
      <IMVERTOR_METAMODEL_KKG_XSD_XSLPATH>Imvert2XSD-ISO19136.xsl</IMVERTOR_METAMODEL_KKG_XSD_XSLPATH>
      <IMVERTOR_METAMODEL_KKG_XSD_POSTFORM_XSLPATH>Imvert2XSD-ISO1936-postform.xsl</IMVERTOR_METAMODEL_KKG_XSD_POSTFORM_XSLPATH>
      <IMVERTOR_METAMODEL_KKG_XSD_IMPORT_XSLPATH>Imvert2XSD-ISO19136-imports.xsl</IMVERTOR_METAMODEL_KKG_XSD_IMPORT_XSLPATH>
 
      <!-- common: -->
   
      <!-- location of the result XSD's when generating XML schemas -->
      <RESULT_XSD_APPLICATION_FOLDER>${system/work-xsd-folder-path}/${cli/xsdsubpath}</RESULT_XSD_APPLICATION_FOLDER>
      <RESULT_XSD_APPLICATION_ONDERLAAG_FOLDER>${system/work-xsd-folder-path}/0302</RESULT_XSD_APPLICATION_ONDERLAAG_FOLDER>
      
      <!-- other metamodel specifics -->
      
      <IMVERTOR_METAMODEL_ISO19136_XSDSOURCE>system</IMVERTOR_METAMODEL_ISO19136_XSDSOURCE>
      
      <IMVERTOR_METAMODEL_ISO19136_XSD_PREFORM_XSLPATH>Imvert2XSD-ISO1936-preform.xsl</IMVERTOR_METAMODEL_ISO19136_XSD_PREFORM_XSLPATH>
      <IMVERTOR_METAMODEL_ISO19136_XSD_XSLPATH>Imvert2XSD-ISO19136.xsl</IMVERTOR_METAMODEL_ISO19136_XSD_XSLPATH>
      <IMVERTOR_METAMODEL_ISO19136_XSD_POSTFORM_XSLPATH>Imvert2XSD-ISO1936-postform.xsl</IMVERTOR_METAMODEL_ISO19136_XSD_POSTFORM_XSLPATH>
      <IMVERTOR_METAMODEL_ISO19136_XSD_IMPORT_XSLPATH>Imvert2XSD-ISO19136-imports.xsl</IMVERTOR_METAMODEL_ISO19136_XSD_IMPORT_XSLPATH>
      
      <IMVERTOR_METAMODEL_ISO19103_XSDSOURCE>system</IMVERTOR_METAMODEL_ISO19103_XSDSOURCE>
      <IMVERTOR_METAMODEL_ISO19103_XSD_XSLPATH>Imvert2XSD-Kadaster.xsl</IMVERTOR_METAMODEL_ISO19103_XSD_XSLPATH>
      
      <IMVERTOR_METAMODEL_BOM_XSDSOURCE>system</IMVERTOR_METAMODEL_BOM_XSDSOURCE>
      <IMVERTOR_METAMODEL_BOM_XSD_XSLPATH>Imvert2XSD-Kadaster.xsl</IMVERTOR_METAMODEL_BOM_XSD_XSLPATH>
      
      <!-- add tables documentation -->
      <IMVERTOR_ENDPRODUCT_DOC_TABLES_XSLPATH>Imvert2XSD-KING-endproduct-tables.xsl</IMVERTOR_ENDPRODUCT_DOC_TABLES_XSLPATH>
      <ENDPRODUCT_DOC_TABLES_FILE_PATH>${system/work-imvert-folder-path}/imvertor.29.tables.html</ENDPRODUCT_DOC_TABLES_FILE_PATH>
      
   </properties>
   <system>
      <endproduct-base-config-file>${system/inp-folder-path}/cfg/schemarules/${cli/endproductbaseconfig}</endproduct-base-config-file>
      
   </system>
   
</config>
